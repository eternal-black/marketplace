DROP TABLE IF EXISTS ADDRESS;
DROP TABLE IF EXISTS CATEGORY;
DROP TABLE IF EXISTS USER;
DROP TABLE IF EXISTS PRODUCT;
DROP TABLE IF EXISTS ORDERS;

CREATE TABLE IF NOT EXISTS ADDRESS (
  ID INT(11) NOT NULL AUTO_INCREMENT,
  COUNTRY VARCHAR(50) NOT NULL,
  CITY VARCHAR(50) NOT NULL,
  STREET VARCHAR(50) NOT NULL,
  HOME VARCHAR(50) NOT NULL,
  APARTMENT VARCHAR(50) NOT NULL,
  CONSTRAINT PK_ADDRESS PRIMARY KEY (ID)
);
CREATE TABLE IF NOT EXISTS CATEGORY (
  ID INT(11) NOT NULL AUTO_INCREMENT,
  NAME VARCHAR(50) NOT NULL,
  CONSTRAINT PK_CATEGORY PRIMARY KEY (ID)
);
CREATE TABLE IF NOT EXISTS USER (
  ID INT(11) NOT NULL AUTO_INCREMENT,
  LOGIN VARCHAR(45) NOT NULL,
  PASSWORD VARCHAR(45) NOT NULL,
  FIRSTNAME VARCHAR(45) NOT NULL,
  LASTNAME VARCHAR(45) NOT NULL,
  PHOTO VARCHAR(45) DEFAULT NULL,
  CASH INT(11) NOT NULL DEFAULT '0',
  RATING INT(11) NOT NULL DEFAULT '0',
  ROLE VARCHAR(10) NOT NULL DEFAULT 'USER' IN ('ADMIN','USER'),
  STATUS VARCHAR(10) NOT NULL DEFAULT 'ACTIVE' IN ('ACTIVE','INACTIVE') ,
  CONSTRAINT PK_USER PRIMARY KEY (ID),
  CONSTRAINT UQ_USER_LOGIN UNIQUE (LOGIN)
);
CREATE TABLE IF NOT EXISTS PRODUCT (
  ID INT(11) NOT NULL AUTO_INCREMENT,
  USER_ID INT(11) DEFAULT NULL,
  CATEGORY_ID INT(11) DEFAULT NULL,
  NAME VARCHAR(50) NOT NULL,
  DESCRIPTION VARCHAR(50) NOT NULL,
  COST INT(11) NOT NULL,
  DISCOUNT INT(11) NOT NULL,
  COUNT INT(11) NOT NULL,
  RATING INT(11) NOT NULL,
  STATUS VARCHAR(10) NOT NULL DEFAULT 'ACTIVE' IN ('ACTIVE','INACTIVE'),
  CONSTRAINT PK_PRODUCT PRIMARY KEY (ID),
  CONSTRAINT FK_PRODUCT_USER FOREIGN KEY (USER_ID) REFERENCES USER(ID),
  CONSTRAINT FK_PRODUCT_CATEGORY FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY(ID)
);
CREATE TABLE IF NOT EXISTS ORDERS (
  ID INT(11) NOT NULL AUTO_INCREMENT,
  USER_ID INT(11) NOT NULL,
  PRODUCT_ID INT(11) NOT NULL,
  ADDRESS_ID INT(11) NOT NULL,
  BUYING_DATE DATE DEFAULT NULL,
  DELIVERY_DATE DATE DEFAULT NULL,
  STATUS VARCHAR(10) NOT NULL DEFAULT 'ACTIVE' IN ('ACTIVE','INACTIVE'),
  CONSTRAINT PK_ORDERS PRIMARY KEY (ID),
  CONSTRAINT FK_ORDERS_USER FOREIGN KEY (USER_ID) REFERENCES USER(ID),
  CONSTRAINT FK_ORDERS_PRODUCT FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(ID),
  CONSTRAINT FK_ORDERS_ADDRESS FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESS(ID)
);